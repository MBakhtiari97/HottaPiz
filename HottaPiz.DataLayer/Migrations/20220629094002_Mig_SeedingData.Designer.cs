// <auto-generated />
using System;
using HottaPiz.DataLayer.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HottaPiz.DataLayer.Migrations
{
    [DbContext(typeof(HottaPizContext))]
    [Migration("20220629094002_Mig_SeedingData")]
    partial class Mig_SeedingData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HottaPiz.DataLayer.Entities.Customer.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CustomerEmailAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CustomerFirstAddress")
                        .IsRequired()
                        .HasMaxLength(800)
                        .HasColumnType("nvarchar(800)");

                    b.Property<string>("CustomerFirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustomerLastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustomerPhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CustomerRegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerSecondAddress")
                        .HasMaxLength(800)
                        .HasColumnType("nvarchar(800)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Customer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerEmailAddress = "admin@admin.com",
                            CustomerFirstAddress = "US , NY , Times Square , 187 Ave , No.33",
                            CustomerFirstName = "admin",
                            CustomerLastName = "admin",
                            CustomerPhoneNumber = "01185966985",
                            CustomerRegisterDate = new DateTime(2022, 6, 29, 14, 10, 1, 890, DateTimeKind.Local).AddTicks(9008),
                            IsAdmin = true,
                            IsDelete = false,
                            LastModifiedDate = new DateTime(2022, 6, 29, 14, 10, 1, 890, DateTimeKind.Local).AddTicks(9010)
                        });
                });

            modelBuilder.Entity("HottaPiz.DataLayer.Entities.Order.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentGateWay")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PaymentTraceCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("TotalOrderPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("HottaPiz.DataLayer.Entities.Order.OrderDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("PizzaId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("PizzaId");

                    b.ToTable("OrdersDetails");
                });

            modelBuilder.Entity("HottaPiz.DataLayer.Entities.Pizza.Pizza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PizzaBasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PizzaCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PizzaImageName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PizzaName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("PizzaTotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Pizzas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2022, 6, 29, 14, 10, 1, 890, DateTimeKind.Local).AddTicks(8950),
                            IsDelete = false,
                            LastModifiedDate = new DateTime(2022, 6, 29, 14, 10, 1, 890, DateTimeKind.Local).AddTicks(8952),
                            PizzaBasePrice = 5m,
                            PizzaImageName = "Veggie Pizza.png",
                            PizzaName = "Veggie Pizza",
                            PizzaTotalPrice = 0m
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2022, 6, 29, 14, 10, 1, 890, DateTimeKind.Local).AddTicks(8957),
                            IsDelete = false,
                            LastModifiedDate = new DateTime(2022, 6, 29, 14, 10, 1, 890, DateTimeKind.Local).AddTicks(8958),
                            PizzaBasePrice = 5m,
                            PizzaImageName = "Pepperoni Pizza.png",
                            PizzaName = "Pepperoni Pizza",
                            PizzaTotalPrice = 0m
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2022, 6, 29, 14, 10, 1, 890, DateTimeKind.Local).AddTicks(8961),
                            IsDelete = false,
                            LastModifiedDate = new DateTime(2022, 6, 29, 14, 10, 1, 890, DateTimeKind.Local).AddTicks(8962),
                            PizzaBasePrice = 5m,
                            PizzaImageName = "Cheese Pizza.png",
                            PizzaName = "Cheese Pizza",
                            PizzaTotalPrice = 0m
                        },
                        new
                        {
                            Id = 4,
                            CreateDate = new DateTime(2022, 6, 29, 14, 10, 1, 890, DateTimeKind.Local).AddTicks(8965),
                            IsDelete = false,
                            LastModifiedDate = new DateTime(2022, 6, 29, 14, 10, 1, 890, DateTimeKind.Local).AddTicks(8966),
                            PizzaBasePrice = 5m,
                            PizzaImageName = "Meats Pizza.png",
                            PizzaName = "Meats Pizza",
                            PizzaTotalPrice = 0m
                        },
                        new
                        {
                            Id = 5,
                            CreateDate = new DateTime(2022, 6, 29, 14, 10, 1, 890, DateTimeKind.Local).AddTicks(8969),
                            IsDelete = false,
                            LastModifiedDate = new DateTime(2022, 6, 29, 14, 10, 1, 890, DateTimeKind.Local).AddTicks(8970),
                            PizzaBasePrice = 5m,
                            PizzaImageName = "Margherita Pizza.png",
                            PizzaName = "Margherita Pizza",
                            PizzaTotalPrice = 0m
                        },
                        new
                        {
                            Id = 6,
                            CreateDate = new DateTime(2022, 6, 29, 14, 10, 1, 890, DateTimeKind.Local).AddTicks(8973),
                            IsDelete = false,
                            LastModifiedDate = new DateTime(2022, 6, 29, 14, 10, 1, 890, DateTimeKind.Local).AddTicks(8974),
                            PizzaBasePrice = 5m,
                            PizzaImageName = "BBQ Chicken Pizza.png",
                            PizzaName = "BBQ Chicken Pizza",
                            PizzaTotalPrice = 0m
                        },
                        new
                        {
                            Id = 7,
                            CreateDate = new DateTime(2022, 6, 29, 14, 10, 1, 890, DateTimeKind.Local).AddTicks(8977),
                            IsDelete = false,
                            LastModifiedDate = new DateTime(2022, 6, 29, 14, 10, 1, 890, DateTimeKind.Local).AddTicks(8978),
                            PizzaBasePrice = 5m,
                            PizzaImageName = "Hawaiian Pizza.png",
                            PizzaName = "Hawaiian Pizza",
                            PizzaTotalPrice = 0m
                        },
                        new
                        {
                            Id = 8,
                            CreateDate = new DateTime(2022, 6, 29, 14, 10, 1, 890, DateTimeKind.Local).AddTicks(8981),
                            IsDelete = false,
                            LastModifiedDate = new DateTime(2022, 6, 29, 14, 10, 1, 890, DateTimeKind.Local).AddTicks(8982),
                            PizzaBasePrice = 5m,
                            PizzaImageName = "Buffalo Pizza.png",
                            PizzaName = "Buffalo Pizza",
                            PizzaTotalPrice = 0m
                        },
                        new
                        {
                            Id = 9,
                            CreateDate = new DateTime(2022, 6, 29, 14, 10, 1, 890, DateTimeKind.Local).AddTicks(8985),
                            IsDelete = false,
                            LastModifiedDate = new DateTime(2022, 6, 29, 14, 10, 1, 890, DateTimeKind.Local).AddTicks(8986),
                            PizzaBasePrice = 5m,
                            PizzaImageName = "Supreme Pizza.png",
                            PizzaName = "Supreme Pizza",
                            PizzaTotalPrice = 0m
                        },
                        new
                        {
                            Id = 10,
                            CreateDate = new DateTime(2022, 6, 29, 14, 10, 1, 890, DateTimeKind.Local).AddTicks(8989),
                            IsDelete = false,
                            LastModifiedDate = new DateTime(2022, 6, 29, 14, 10, 1, 890, DateTimeKind.Local).AddTicks(8990),
                            PizzaBasePrice = 5m,
                            PizzaImageName = "The Works Pizza.png",
                            PizzaName = "The Works Pizza",
                            PizzaTotalPrice = 0m
                        });
                });

            modelBuilder.Entity("HottaPiz.DataLayer.Entities.Pizza.PizzaIngredients", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("IngredientPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("IngredientTitle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PizzasIngredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IngredientPrice = 0.49m,
                            IngredientTitle = "Mushroom",
                            IsDelete = false,
                            LastModifiedDate = new DateTime(2022, 6, 29, 14, 10, 1, 890, DateTimeKind.Local).AddTicks(8750)
                        },
                        new
                        {
                            Id = 2,
                            IngredientPrice = 3.99m,
                            IngredientTitle = "Beef",
                            IsDelete = false,
                            LastModifiedDate = new DateTime(2022, 6, 29, 14, 10, 1, 890, DateTimeKind.Local).AddTicks(8784)
                        },
                        new
                        {
                            Id = 3,
                            IngredientPrice = 2.99m,
                            IngredientTitle = "Ham",
                            IsDelete = false,
                            LastModifiedDate = new DateTime(2022, 6, 29, 14, 10, 1, 890, DateTimeKind.Local).AddTicks(8787)
                        },
                        new
                        {
                            Id = 4,
                            IngredientPrice = 1.99m,
                            IngredientTitle = "Chicken",
                            IsDelete = false,
                            LastModifiedDate = new DateTime(2022, 6, 29, 14, 10, 1, 890, DateTimeKind.Local).AddTicks(8789)
                        },
                        new
                        {
                            Id = 5,
                            IngredientPrice = 1.99m,
                            IngredientTitle = "Pepperoni",
                            IsDelete = false,
                            LastModifiedDate = new DateTime(2022, 6, 29, 14, 10, 1, 890, DateTimeKind.Local).AddTicks(8792)
                        },
                        new
                        {
                            Id = 6,
                            IngredientPrice = 1.99m,
                            IngredientTitle = "Bologna",
                            IsDelete = false,
                            LastModifiedDate = new DateTime(2022, 6, 29, 14, 10, 1, 890, DateTimeKind.Local).AddTicks(8794)
                        },
                        new
                        {
                            Id = 7,
                            IngredientPrice = 0.49m,
                            IngredientTitle = "CheddarCheese",
                            IsDelete = false,
                            LastModifiedDate = new DateTime(2022, 6, 29, 14, 10, 1, 890, DateTimeKind.Local).AddTicks(8797)
                        },
                        new
                        {
                            Id = 8,
                            IngredientPrice = 0.49m,
                            IngredientTitle = "GoudaCheese",
                            IsDelete = false,
                            LastModifiedDate = new DateTime(2022, 6, 29, 14, 10, 1, 890, DateTimeKind.Local).AddTicks(8799)
                        },
                        new
                        {
                            Id = 9,
                            IngredientPrice = 0.49m,
                            IngredientTitle = "Olive",
                            IsDelete = false,
                            LastModifiedDate = new DateTime(2022, 6, 29, 14, 10, 1, 890, DateTimeKind.Local).AddTicks(8802)
                        },
                        new
                        {
                            Id = 10,
                            IngredientPrice = 6.99m,
                            IngredientTitle = "Pineapple",
                            IsDelete = false,
                            LastModifiedDate = new DateTime(2022, 6, 29, 14, 10, 1, 890, DateTimeKind.Local).AddTicks(8804)
                        },
                        new
                        {
                            Id = 11,
                            IngredientPrice = 0.49m,
                            IngredientTitle = "Tomato",
                            IsDelete = false,
                            LastModifiedDate = new DateTime(2022, 6, 29, 14, 10, 1, 890, DateTimeKind.Local).AddTicks(8807)
                        },
                        new
                        {
                            Id = 12,
                            IngredientPrice = 0.49m,
                            IngredientTitle = "Onion",
                            IsDelete = false,
                            LastModifiedDate = new DateTime(2022, 6, 29, 14, 10, 1, 890, DateTimeKind.Local).AddTicks(8809)
                        },
                        new
                        {
                            Id = 13,
                            IngredientPrice = 0.49m,
                            IngredientTitle = "Potato",
                            IsDelete = false,
                            LastModifiedDate = new DateTime(2022, 6, 29, 14, 10, 1, 890, DateTimeKind.Local).AddTicks(8811)
                        },
                        new
                        {
                            Id = 14,
                            IngredientPrice = 0.49m,
                            IngredientTitle = "SweatPepper",
                            IsDelete = false,
                            LastModifiedDate = new DateTime(2022, 6, 29, 14, 10, 1, 890, DateTimeKind.Local).AddTicks(8814)
                        },
                        new
                        {
                            Id = 15,
                            IngredientPrice = 0.99m,
                            IngredientTitle = "Vegetable",
                            IsDelete = false,
                            LastModifiedDate = new DateTime(2022, 6, 29, 14, 10, 1, 890, DateTimeKind.Local).AddTicks(8816)
                        },
                        new
                        {
                            Id = 16,
                            IngredientPrice = 0m,
                            IngredientTitle = "TomatoSauce",
                            IsDelete = false,
                            LastModifiedDate = new DateTime(2022, 6, 29, 14, 10, 1, 890, DateTimeKind.Local).AddTicks(8819)
                        },
                        new
                        {
                            Id = 17,
                            IngredientPrice = 0m,
                            IngredientTitle = "FrenchSauce",
                            IsDelete = false,
                            LastModifiedDate = new DateTime(2022, 6, 29, 14, 10, 1, 890, DateTimeKind.Local).AddTicks(8821)
                        },
                        new
                        {
                            Id = 18,
                            IngredientPrice = 0m,
                            IngredientTitle = "MayonnaiseSauce",
                            IsDelete = false,
                            LastModifiedDate = new DateTime(2022, 6, 29, 14, 10, 1, 890, DateTimeKind.Local).AddTicks(8823)
                        });
                });

            modelBuilder.Entity("HottaPiz.DataLayer.Entities.Pizza.PizzaToIngredients", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PizzaId")
                        .HasColumnType("int");

                    b.Property<int>("PizzaIngredientId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PizzaId");

                    b.HasIndex("PizzaIngredientId");

                    b.ToTable("PizzaToIngredients");
                });

            modelBuilder.Entity("HottaPiz.DataLayer.Entities.Order.Order", b =>
                {
                    b.HasOne("HottaPiz.DataLayer.Entities.Customer.Customer", null)
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HottaPiz.DataLayer.Entities.Order.OrderDetails", b =>
                {
                    b.HasOne("HottaPiz.DataLayer.Entities.Order.Order", null)
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HottaPiz.DataLayer.Entities.Pizza.Pizza", null)
                        .WithMany()
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HottaPiz.DataLayer.Entities.Pizza.PizzaToIngredients", b =>
                {
                    b.HasOne("HottaPiz.DataLayer.Entities.Pizza.Pizza", null)
                        .WithMany()
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HottaPiz.DataLayer.Entities.Pizza.PizzaIngredients", null)
                        .WithMany()
                        .HasForeignKey("PizzaIngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
